(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VF2. Tree of Life (medium)\u000atime limit per test5 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aHeidi got tired of deciphering the prophecy hidden in the Tree of Life and decided to go back to her headquarters, rest a little and try there. Of course, she cannot uproot the Tree and take it with her, so she made a drawing of the Tree on a piece of paper. On second thought, she made more identical drawings so as to have n in total (where n is the number of vertices of the Tree of Life) \u2013 who knows what might happen?\u000aIndeed, on her way back Heidi was ambushed by a group of zombies. While she managed to fend them off, they have damaged her drawings in a peculiar way: from the i-th copy, the vertex numbered i was removed, along with all adjacent edges. In each picture, the zombies have also erased all the vertex numbers and relabeled the remaining n\u2009-\u20091 vertices arbitrarily using numbers 1 to n (fortunately, each vertex still has a distinct number). What's more, the drawings have been arbitrarily shuffled/reordered.\u000aNow Heidi wants to recover the Tree of Life from her descriptions of all the drawings (as lists of edges).\u000aInput\u000aThe first line of the input contains Z\u2009\u2264\u200920 \u2013 the number of test cases. Z descriptions of single test cases follow.\u000aIn each test case, the first line of input contains numbers n (2\u2009\u2264\u2009n\u2009\u2264\u2009100) and k (where k is the number of drawings; we have k\u2009=\u2009n). In the following lines, the descriptions of the k drawings are given. The description of the i-th drawing is a line containing mi \u2013 the number of edges in this drawing, followed by mi lines describing edges, each of which contains two space-separated integers \u2013- the numbers of the two vertices connected by the edge.\u000aOutput\u000aIf Heidi's drawings cannot possibly come from a single tree, you should output the word NO. Otherwise, output one line containing the word YES and n\u2009-\u20091 lines describing any tree that Heidi's drawings could have come from. For every edge you should output the numbers of the vertices that it connects, separated with a single space. If there are many solutions, print any of them.\u000aExample\u000ainput\u000a1\u000a5 5\u000a2\u000a4 1\u000a2 1\u000a1\u000a3 1\u000a3\u000a4 1\u000a4 3\u000a2 1\u000a3\u000a3 1\u000a3 2\u000a4 1\u000a3\u000a2 1\u000a3 2\u000a4 2\u000aoutput\u000aYES\u000a2 5\u000a4 2\u000a3 2\u000a5 1
p3
sS'problemStatement'
p4
VF2. Tree of Life (medium)\u000atime limit per test5 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aHeidi got tired of deciphering the prophecy hidden in the Tree of Life and decided to go back to her headquarters, rest a little and try there. Of course, she cannot uproot the Tree and take it with her, so she made a drawing of the Tree on a piece of paper. On second thought, she made more identical drawings so as to have n in total (where n is the number of vertices of the Tree of Life) \u2013 who knows what might happen?\u000aIndeed, on her way back Heidi was ambushed by a group of zombies. While she managed to fend them off, they have damaged her drawings in a peculiar way: from the i-th copy, the vertex numbered i was removed, along with all adjacent edges. In each picture, the zombies have also erased all the vertex numbers and relabeled the remaining n\u2009-\u20091 vertices arbitrarily using numbers 1 to n (fortunately, each vertex still has a distinct number). What's more, the drawings have been arbitrarily shuffled/reordered.\u000aNow Heidi wants to recover the Tree of Life from her descriptions of all the drawings (as lists of edges).\u000aInput\u000aThe first line of the input contains Z\u2009\u2264\u200920 \u2013 the number of test cases. Z descriptions of single test cases follow.\u000aIn each test case, the first line of input contains numbers n (2\u2009\u2264\u2009n\u2009\u2264\u2009100) and k (where k is the number of drawings; we have k\u2009=\u2009n). In the following lines, the descriptions of the k drawings are given. The description of the i-th drawing is a line containing mi \u2013 the number of edges in this drawing, followed by mi lines describing edges, each of which contains two space-separated integers \u2013- the numbers of the two vertices connected by the edge.\u000aOutput\u000aIf Heidi's drawings cannot possibly come from a single tree, you should output the word NO. Otherwise, output one line containing the word YES and n\u2009-\u20091 lines describing any tree that Heidi's drawings could have come from. For every edge you should output the numbers of the vertices that it connects, separated with a single space. If there are many solutions, print any of them.\u000aExample\u000ainput\u000a1\u000a5 5\u000a2\u000a4 1\u000a2 1\u000a1\u000a3 1\u000a3\u000a4 1\u000a4 3\u000a2 1\u000a3\u000a3 1\u000a3 2\u000a4 1\u000a3\u000a2 1\u000a3 2\u000a4 2\u000aoutput\u000aYES\u000a2 5\u000a4 2\u000a3 2\u000a5 1
p5
sS'name'
p6
VF2. Tree of Life (medium)
p7
sS'tags'
p8
Vconstructive algorithms hashing trees 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/690/F2
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V5 seconds
p15
sS'output'
p16
(lp17
VOutput
p18
aVIf Heidi's drawings cannot possibly come from a single tree, you should output the word NO. Otherwise, output one line containing the word YES and n\u2009-\u20091 lines describing any tree that Heidi's drawings could have come from. For every edge you should output the numbers of the vertices that it connects, separated with a single space. If there are many solutions, print any of them.
p19
asS'statement'
p20
(lp21
VF2. Tree of Life (medium)
p22
aVtime limit per test5 seconds
p23
aVmemory limit per test256 megabytes
p24
aVinputstandard input
p25
aVoutputstandard output
p26
aVHeidi got tired of deciphering the prophecy hidden in the Tree of Life and decided to go back to her headquarters, rest a little and try there. Of course, she cannot uproot the Tree and take it with her, so she made a drawing of the Tree on a piece of paper. On second thought, she made more identical drawings so as to have n in total (where n is the number of vertices of the Tree of Life) \u2013 who knows what might happen?
p27
aVIndeed, on her way back Heidi was ambushed by a group of zombies. While she managed to fend them off, they have damaged her drawings in a peculiar way: from the i-th copy, the vertex numbered i was removed, along with all adjacent edges. In each picture, the zombies have also erased all the vertex numbers and relabeled the remaining n\u2009-\u20091 vertices arbitrarily using numbers 1 to n (fortunately, each vertex still has a distinct number). What's more, the drawings have been arbitrarily shuffled/reordered.
p28
aVNow Heidi wants to recover the Tree of Life from her descriptions of all the drawings (as lists of edges).
p29
asS'problemId'
p30
V690/F2
p31
sS'input'
p32
(lp33
VInput
p34
aVThe first line of the input contains Z\u2009\u2264\u200920 \u2013 the number of test cases. Z descriptions of single test cases follow.
p35
aVIn each test case, the first line of input contains numbers n (2\u2009\u2264\u2009n\u2009\u2264\u2009100) and k (where k is the number of drawings; we have k\u2009=\u2009n). In the following lines, the descriptions of the k drawings are given. The description of the i-th drawing is a line containing mi \u2013 the number of edges in this drawing, followed by mi lines describing edges, each of which contains two space-separated integers \u2013- the numbers of the two vertices connected by the edge.
p36
asS'id'
p37
c__builtin__
id
p38
sS'constraints'
p39
g33
sb.