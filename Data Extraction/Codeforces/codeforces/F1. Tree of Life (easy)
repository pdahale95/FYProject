(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VF1. Tree of Life (easy)\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aHeidi has finally found the mythical Tree of Life \u2013 a legendary combinatorial structure which is said to contain a prophecy crucially needed to defeat the undead armies.\u000aOn the surface, the Tree of Life is just a regular undirected tree well-known from computer science. This means that it is a collection of n points (called vertices), some of which are connected using n\u2009-\u20091 line segments (edges) so that each pair of vertices is connected by a path (a sequence of one or more edges).\u000aTo decipher the prophecy, Heidi needs to perform a number of steps. The first is counting the number of lifelines in the tree \u2013 these are paths of length 2, i.e., consisting of two edges. Help her!\u000aInput\u000aThe first line of the input contains a single integer n \u2013 the number of vertices in the tree (1\u2009\u2264\u2009n\u2009\u2264\u200910000). The vertices are labeled with the numbers from 1 to n. Then n\u2009-\u20091 lines follow, each describing one edge using two space-separated numbers a\u2002b \u2013 the labels of the vertices connected by the edge (1\u2009\u2264\u2009a\u2009<\u2009b\u2009\u2264\u2009n). It is guaranteed that the input represents a tree.\u000aOutput\u000aPrint one integer \u2013 the number of lifelines in the tree.\u000aExamples\u000ainput\u000a4\u000a1 2\u000a1 3\u000a1 4\u000aoutput\u000a3\u000ainput\u000a5\u000a1 2\u000a2 3\u000a3 4\u000a3 5\u000aoutput\u000a4\u000aNote\u000aIn the second sample, there are four lifelines: paths between vertices 1 and 3, 2 and 4, 2 and 5, and 4 and 5.
p3
sS'problemStatement'
p4
VF1. Tree of Life (easy)\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aHeidi has finally found the mythical Tree of Life \u2013 a legendary combinatorial structure which is said to contain a prophecy crucially needed to defeat the undead armies.\u000aOn the surface, the Tree of Life is just a regular undirected tree well-known from computer science. This means that it is a collection of n points (called vertices), some of which are connected using n\u2009-\u20091 line segments (edges) so that each pair of vertices is connected by a path (a sequence of one or more edges).\u000aTo decipher the prophecy, Heidi needs to perform a number of steps. The first is counting the number of lifelines in the tree \u2013 these are paths of length 2, i.e., consisting of two edges. Help her!\u000aInput\u000aThe first line of the input contains a single integer n \u2013 the number of vertices in the tree (1\u2009\u2264\u2009n\u2009\u2264\u200910000). The vertices are labeled with the numbers from 1 to n. Then n\u2009-\u20091 lines follow, each describing one edge using two space-separated numbers a\u2002b \u2013 the labels of the vertices connected by the edge (1\u2009\u2264\u2009a\u2009<\u2009b\u2009\u2264\u2009n). It is guaranteed that the input represents a tree.\u000aOutput\u000aPrint one integer \u2013 the number of lifelines in the tree.\u000aExamples\u000ainput\u000a4\u000a1 2\u000a1 3\u000a1 4\u000aoutput\u000a3\u000ainput\u000a5\u000a1 2\u000a2 3\u000a3 4\u000a3 5\u000aoutput\u000a4\u000aNote\u000aIn the second sample, there are four lifelines: paths between vertices 1 and 3, 2 and 4, 2 and 5, and 4 and 5.
p5
sS'name'
p6
VF1. Tree of Life (easy)
p7
sS'tags'
p8
S''
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/690/F1
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2 seconds
p15
sS'problemId'
p16
V690/F1
p17
sS'id'
p18
c__builtin__
id
p19
sb.