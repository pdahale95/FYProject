(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VA. Bear and Prime 100\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aThis is an interactive problem. In the output section below you will see the information about flushing the output.\u000aBear Limak thinks of some hidden number \u2014 an integer from interval [2,\u2009100]. Your task is to say if the hidden number is prime or composite.\u000aInteger x\u2009>\u20091 is called prime if it has exactly two distinct divisors, 1 and x. If integer x\u2009>\u20091 is not prime, it's called composite.\u000aYou can ask up to 20 queries about divisors of the hidden number. In each query you should print an integer from interval [2,\u2009100]. The system will answer "yes" if your integer is a divisor of the hidden number. Otherwise, the answer will be "no".\u000aFor example, if the hidden number is 14 then the system will answer "yes" only if you print 2, 7 or 14.\u000aWhen you are done asking queries, print "prime" or "composite" and terminate your program.\u000aYou will get the Wrong Answer verdict if you ask more than 20 queries, or if you print an integer not from the range [2,\u2009100]. Also, you will get the Wrong Answer verdict if the printed answer isn't correct.\u000aYou will get the Idleness Limit Exceeded verdict if you don't print anything (but you should) or if you forget about flushing the output (more info below).\u000aInput\u000aAfter each query you should read one string from the input. It will be "yes" if the printed integer is a divisor of the hidden number, and "no" otherwise.\u000aOutput\u000aUp to 20 times you can ask a query \u2014 print an integer from interval [2,\u2009100] in one line. You have to both print the end-of-line character and flush the output. After flushing you should read a response from the input.\u000aIn any moment you can print the answer "prime" or "composite" (without the quotes). After that, flush the output and terminate your program.\u000aTo flush you can use (just after printing an integer and end-of-line):\u000afflush(stdout) in C++;\u000aSystem.out.flush() in Java;\u000astdout.flush() in Python;\u000aflush(output) in Pascal;\u000aSee the documentation for other languages.\u000aHacking. To hack someone, as the input you should print the hidden number \u2014 one integer from the interval [2,\u2009100]. Of course, his/her solution won't be able to read the hidden number from the input.\u000aExamples\u000ainput\u000ayes\u000ano\u000ayes\u000aoutput\u000a2\u000a80\u000a5\u000acomposite\u000ainput\u000ano\u000ayes\u000ano\u000ano\u000ano\u000aoutput\u000a58\u000a59\u000a78\u000a78\u000a2\u000aprime\u000aNote\u000aThe hidden number in the first query is 30. In a table below you can see a better form of the provided example of the communication process.\u000aThe hidden number is divisible by both 2 and 5. Thus, it must be composite. Note that it isn't necessary to know the exact value of the hidden number. In this test, the hidden number is 30.\u000a59 is a divisor of the hidden number. In the interval [2,\u2009100] there is only one number with this divisor. The hidden number must be 59, which is prime. Note that the answer is known even after the second query and you could print it then and terminate. Though, it isn't forbidden to ask unnecessary queries (unless you exceed the limit of 20 queries).
p3
sS'problemStatement'
p4
VA. Bear and Prime 100\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aThis is an interactive problem. In the output section below you will see the information about flushing the output.\u000aBear Limak thinks of some hidden number \u2014 an integer from interval [2,\u2009100]. Your task is to say if the hidden number is prime or composite.\u000aInteger x\u2009>\u20091 is called prime if it has exactly two distinct divisors, 1 and x. If integer x\u2009>\u20091 is not prime, it's called composite.\u000aYou can ask up to 20 queries about divisors of the hidden number. In each query you should print an integer from interval [2,\u2009100]. The system will answer "yes" if your integer is a divisor of the hidden number. Otherwise, the answer will be "no".\u000aFor example, if the hidden number is 14 then the system will answer "yes" only if you print 2, 7 or 14.\u000aWhen you are done asking queries, print "prime" or "composite" and terminate your program.\u000aYou will get the Wrong Answer verdict if you ask more than 20 queries, or if you print an integer not from the range [2,\u2009100]. Also, you will get the Wrong Answer verdict if the printed answer isn't correct.\u000aYou will get the Idleness Limit Exceeded verdict if you don't print anything (but you should) or if you forget about flushing the output (more info below).\u000aInput\u000aAfter each query you should read one string from the input. It will be "yes" if the printed integer is a divisor of the hidden number, and "no" otherwise.\u000aOutput\u000aUp to 20 times you can ask a query \u2014 print an integer from interval [2,\u2009100] in one line. You have to both print the end-of-line character and flush the output. After flushing you should read a response from the input.\u000aIn any moment you can print the answer "prime" or "composite" (without the quotes). After that, flush the output and terminate your program.\u000aTo flush you can use (just after printing an integer and end-of-line):\u000afflush(stdout) in C++;\u000aSystem.out.flush() in Java;\u000astdout.flush() in Python;\u000aflush(output) in Pascal;\u000aSee the documentation for other languages.\u000aHacking. To hack someone, as the input you should print the hidden number \u2014 one integer from the interval [2,\u2009100]. Of course, his/her solution won't be able to read the hidden number from the input.\u000aExamples\u000ainput\u000ayes\u000ano\u000ayes\u000aoutput\u000a2\u000a80\u000a5\u000acomposite\u000ainput\u000ano\u000ayes\u000ano\u000ano\u000ano\u000aoutput\u000a58\u000a59\u000a78\u000a78\u000a2\u000aprime\u000aNote\u000aThe hidden number in the first query is 30. In a table below you can see a better form of the provided example of the communication process.\u000aThe hidden number is divisible by both 2 and 5. Thus, it must be composite. Note that it isn't necessary to know the exact value of the hidden number. In this test, the hidden number is 30.\u000a59 is a divisor of the hidden number. In the interval [2,\u2009100] there is only one number with this divisor. The hidden number must be 59, which is prime. Note that the answer is known even after the second query and you could print it then and terminate. Though, it isn't forbidden to ask unnecessary queries (unless you exceed the limit of 20 queries).
p5
sS'name'
p6
VA. Bear and Prime 100
p7
sS'tags'
p8
Vconstructive algorithms 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/679/A
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V1 second
p15
sS'problemId'
p16
V679/A
p17
sS'id'
p18
c__builtin__
id
p19
sb.