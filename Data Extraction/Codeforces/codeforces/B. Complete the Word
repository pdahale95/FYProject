(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VB. Complete the Word\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aZS the Coder loves to read the dictionary. He thinks that a word is nice if there exists a substring (contiguous segment of letters) of it of length 26 where each letter of English alphabet appears exactly once. In particular, if the string has length strictly less than 26, no such substring exists and thus it is not nice.\u000aNow, ZS the Coder tells you a word, where some of its letters are missing as he forgot them. He wants to determine if it is possible to fill in the missing letters so that the resulting word is nice. If it is possible, he needs you to find an example of such a word as well. Can you help him?\u000aInput\u000aThe first and only line of the input contains a single string s (1\u2009\u2264\u2009|s|\u2009\u2264\u200950\u2009000), the word that ZS the Coder remembers. Each character of the string is the uppercase letter of English alphabet ('A'-'Z') or is a question mark ('?'), where the question marks denotes the letters that ZS the Coder can't remember.\u000aOutput\u000aIf there is no way to replace all the question marks with uppercase letters such that the resulting word is nice, then print \u2009-\u20091 in the only line.\u000aOtherwise, print a string which denotes a possible nice word that ZS the Coder learned. This string should match the string from the input, except for the question marks replaced with uppercase English letters.\u000aIf there are multiple solutions, you may print any of them.\u000aExamples\u000ainput\u000aABC??FGHIJK???OPQR?TUVWXY?\u000aoutput\u000aABCDEFGHIJKLMNOPQRZTUVWXYS\u000ainput\u000aWELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\u000aoutput\u000a-1\u000ainput\u000a??????????????????????????\u000aoutput\u000aMNBVCXZLKJHGFDSAQPWOEIRUYT\u000ainput\u000aAABCDEFGHIJKLMNOPQRSTUVW??M\u000aoutput\u000a-1\u000aNote\u000aIn the first sample case, ABCDEFGHIJKLMNOPQRZTUVWXYS is a valid answer beacuse it contains a substring of length 26 (the whole string in this case) which contains all the letters of the English alphabet exactly once. Note that there are many possible solutions, such as ABCDEFGHIJKLMNOPQRSTUVWXYZ or ABCEDFGHIJKLMNOPQRZTUVWXYS.\u000aIn the second sample case, there are no missing letters. In addition, the given string does not have a substring of length 26 that contains all the letters of the alphabet, so the answer is \u2009-\u20091.\u000aIn the third sample case, any string of length 26 that contains all letters of the English alphabet fits as an answer.
p3
sS'problemStatement'
p4
VB. Complete the Word\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aZS the Coder loves to read the dictionary. He thinks that a word is nice if there exists a substring (contiguous segment of letters) of it of length 26 where each letter of English alphabet appears exactly once. In particular, if the string has length strictly less than 26, no such substring exists and thus it is not nice.\u000aNow, ZS the Coder tells you a word, where some of its letters are missing as he forgot them. He wants to determine if it is possible to fill in the missing letters so that the resulting word is nice. If it is possible, he needs you to find an example of such a word as well. Can you help him?\u000aInput\u000aThe first and only line of the input contains a single string s (1\u2009\u2264\u2009|s|\u2009\u2264\u200950\u2009000), the word that ZS the Coder remembers. Each character of the string is the uppercase letter of English alphabet ('A'-'Z') or is a question mark ('?'), where the question marks denotes the letters that ZS the Coder can't remember.\u000aOutput\u000aIf there is no way to replace all the question marks with uppercase letters such that the resulting word is nice, then print \u2009-\u20091 in the only line.\u000aOtherwise, print a string which denotes a possible nice word that ZS the Coder learned. This string should match the string from the input, except for the question marks replaced with uppercase English letters.\u000aIf there are multiple solutions, you may print any of them.\u000aExamples\u000ainput\u000aABC??FGHIJK???OPQR?TUVWXY?\u000aoutput\u000aABCDEFGHIJKLMNOPQRZTUVWXYS\u000ainput\u000aWELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\u000aoutput\u000a-1\u000ainput\u000a??????????????????????????\u000aoutput\u000aMNBVCXZLKJHGFDSAQPWOEIRUYT\u000ainput\u000aAABCDEFGHIJKLMNOPQRSTUVW??M\u000aoutput\u000a-1\u000aNote\u000aIn the first sample case, ABCDEFGHIJKLMNOPQRZTUVWXYS is a valid answer beacuse it contains a substring of length 26 (the whole string in this case) which contains all the letters of the English alphabet exactly once. Note that there are many possible solutions, such as ABCDEFGHIJKLMNOPQRSTUVWXYZ or ABCEDFGHIJKLMNOPQRZTUVWXYS.\u000aIn the second sample case, there are no missing letters. In addition, the given string does not have a substring of length 26 that contains all the letters of the alphabet, so the answer is \u2009-\u20091.\u000aIn the third sample case, any string of length 26 that contains all letters of the English alphabet fits as an answer.
p5
sS'name'
p6
VB. Complete the Word
p7
sS'tags'
p8
Vtwo pointers 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/716/B
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2 seconds
p15
sS'problemId'
p16
V716/B
p17
sS'id'
p18
c__builtin__
id
p19
sb.