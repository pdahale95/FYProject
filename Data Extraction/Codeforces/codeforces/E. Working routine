(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VE. Working routine\u000atime limit per test2.5 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aVasiliy finally got to work, where there is a huge amount of tasks waiting for him. Vasiliy is given a matrix consisting of n rows and m columns and q tasks. Each task is to swap two submatrices of the given matrix.\u000aFor each task Vasiliy knows six integers ai, bi, ci, di, hi, wi, where ai is the index of the row where the top-left corner of the first rectangle is located, bi is the index of its column, ci is the index of the row of the top-left corner of the second rectangle, di is the index of its column, hi is the height of the rectangle and wi is its width.\u000aIt's guaranteed that two rectangles in one query do not overlap and do not touch, that is, no cell belongs to both rectangles, and no two cells belonging to different rectangles share a side. However, rectangles are allowed to share an angle.\u000aVasiliy wants to know how the matrix will look like after all tasks are performed.\u000aInput\u000aThe first line of the input contains three integers n, m and q (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000, 1\u2009\u2264\u2009q\u2009\u2264\u200910\u2009000) \u2014 the number of rows and columns in matrix, and the number of tasks Vasiliy has to perform.\u000aThen follow n lines containing m integers vi,\u2009j (1\u2009\u2264\u2009vi,\u2009j\u2009\u2264\u2009109) each \u2014 initial values of the cells of the matrix.\u000aEach of the following q lines contains six integers ai, bi, ci, di, hi, wi (1\u2009\u2264\u2009ai,\u2009ci,\u2009hi\u2009\u2264\u2009n, 1\u2009\u2264\u2009bi,\u2009di,\u2009wi\u2009\u2264\u2009m).\u000aOutput\u000aPrint n lines containing m integers each \u2014 the resulting matrix.\u000aExamples\u000ainput\u000a4 4 2\u000a1 1 2 2\u000a1 1 2 2\u000a3 3 4 4\u000a3 3 4 4\u000a1 1 3 3 2 2\u000a3 1 1 3 2 2\u000aoutput\u000a4 4 3 3\u000a4 4 3 3\u000a2 2 1 1\u000a2 2 1 1\u000ainput\u000a4 2 1\u000a1 1\u000a1 1\u000a2 2\u000a2 2\u000a1 1 4 1 1 2\u000aoutput\u000a2 2\u000a1 1\u000a2 2\u000a1 1
p3
sS'problemStatement'
p4
VE. Working routine\u000atime limit per test2.5 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aVasiliy finally got to work, where there is a huge amount of tasks waiting for him. Vasiliy is given a matrix consisting of n rows and m columns and q tasks. Each task is to swap two submatrices of the given matrix.\u000aFor each task Vasiliy knows six integers ai, bi, ci, di, hi, wi, where ai is the index of the row where the top-left corner of the first rectangle is located, bi is the index of its column, ci is the index of the row of the top-left corner of the second rectangle, di is the index of its column, hi is the height of the rectangle and wi is its width.\u000aIt's guaranteed that two rectangles in one query do not overlap and do not touch, that is, no cell belongs to both rectangles, and no two cells belonging to different rectangles share a side. However, rectangles are allowed to share an angle.\u000aVasiliy wants to know how the matrix will look like after all tasks are performed.\u000aInput\u000aThe first line of the input contains three integers n, m and q (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000, 1\u2009\u2264\u2009q\u2009\u2264\u200910\u2009000) \u2014 the number of rows and columns in matrix, and the number of tasks Vasiliy has to perform.\u000aThen follow n lines containing m integers vi,\u2009j (1\u2009\u2264\u2009vi,\u2009j\u2009\u2264\u2009109) each \u2014 initial values of the cells of the matrix.\u000aEach of the following q lines contains six integers ai, bi, ci, di, hi, wi (1\u2009\u2264\u2009ai,\u2009ci,\u2009hi\u2009\u2264\u2009n, 1\u2009\u2264\u2009bi,\u2009di,\u2009wi\u2009\u2264\u2009m).\u000aOutput\u000aPrint n lines containing m integers each \u2014 the resulting matrix.\u000aExamples\u000ainput\u000a4 4 2\u000a1 1 2 2\u000a1 1 2 2\u000a3 3 4 4\u000a3 3 4 4\u000a1 1 3 3 2 2\u000a3 1 1 3 2 2\u000aoutput\u000a4 4 3 3\u000a4 4 3 3\u000a2 2 1 1\u000a2 2 1 1\u000ainput\u000a4 2 1\u000a1 1\u000a1 1\u000a2 2\u000a2 2\u000a1 1 4 1 1 2\u000aoutput\u000a2 2\u000a1 1\u000a2 2\u000a1 1
p5
sS'name'
p6
VE. Working routine
p7
sS'tags'
p8
Vdata structures implementation 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/706/E
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2.5 seconds
p15
sS'problemId'
p16
V706/E
p17
sS'id'
p18
c__builtin__
id
p19
sb.