(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VA. Efim and Strange Grade\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aEfim just received his grade for the last test. He studies in a special school and his grade can be equal to any positive decimal fraction. First he got disappointed, as he expected a way more pleasant result. Then, he developed a tricky plan. Each second, he can ask his teacher to round the grade at any place after the decimal point (also, he can ask to round to the nearest integer).\u000aThere are t seconds left till the end of the break, so Efim has to act fast. Help him find what is the maximum grade he can get in no more than t seconds. Note, that he can choose to not use all t seconds. Moreover, he can even choose to not round the grade at all.\u000aIn this problem, classic rounding rules are used: while rounding number to the n-th digit one has to take a look at the digit n\u2009+\u20091. If it is less than 5 than the n-th digit remain unchanged while all subsequent digits are replaced with 0. Otherwise, if the n\u2009+\u20091 digit is greater or equal to 5, the digit at the position n is increased by 1 (this might also change some other digits, if this one was equal to 9) and all subsequent digits are replaced with 0. At the end, all trailing zeroes are thrown away.\u000aFor example, if the number 1.14 is rounded to the first decimal place, the result is 1.1, while if we round 1.5 to the nearest integer, the result is 2. Rounding number 1.299996121 in the fifth decimal place will result in number 1.3.\u000aInput\u000aThe first line of the input contains two integers n and t (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000, 1\u2009\u2264\u2009t\u2009\u2264\u2009109) \u2014 the length of Efim's grade and the number of seconds till the end of the break respectively.\u000aThe second line contains the grade itself. It's guaranteed that the grade is a positive number, containing at least one digit after the decimal points, and it's representation doesn't finish with 0.\u000aOutput\u000aPrint the maximum grade that Efim can get in t seconds. Do not print trailing zeroes.\u000aExamples\u000ainput\u000a6 1\u000a10.245\u000aoutput\u000a10.25\u000ainput\u000a6 2\u000a10.245\u000aoutput\u000a10.3\u000ainput\u000a3 100\u000a9.2\u000aoutput\u000a9.2\u000aNote\u000aIn the first two samples Efim initially has grade 10.245.\u000aDuring the first second Efim can obtain grade 10.25, and then 10.3 during the next second. Note, that the answer 10.30 will be considered incorrect.\u000aIn the third sample the optimal strategy is to not perform any rounding at all.
p3
sS'problemStatement'
p4
VA. Efim and Strange Grade\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aEfim just received his grade for the last test. He studies in a special school and his grade can be equal to any positive decimal fraction. First he got disappointed, as he expected a way more pleasant result. Then, he developed a tricky plan. Each second, he can ask his teacher to round the grade at any place after the decimal point (also, he can ask to round to the nearest integer).\u000aThere are t seconds left till the end of the break, so Efim has to act fast. Help him find what is the maximum grade he can get in no more than t seconds. Note, that he can choose to not use all t seconds. Moreover, he can even choose to not round the grade at all.\u000aIn this problem, classic rounding rules are used: while rounding number to the n-th digit one has to take a look at the digit n\u2009+\u20091. If it is less than 5 than the n-th digit remain unchanged while all subsequent digits are replaced with 0. Otherwise, if the n\u2009+\u20091 digit is greater or equal to 5, the digit at the position n is increased by 1 (this might also change some other digits, if this one was equal to 9) and all subsequent digits are replaced with 0. At the end, all trailing zeroes are thrown away.\u000aFor example, if the number 1.14 is rounded to the first decimal place, the result is 1.1, while if we round 1.5 to the nearest integer, the result is 2. Rounding number 1.299996121 in the fifth decimal place will result in number 1.3.\u000aInput\u000aThe first line of the input contains two integers n and t (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000, 1\u2009\u2264\u2009t\u2009\u2264\u2009109) \u2014 the length of Efim's grade and the number of seconds till the end of the break respectively.\u000aThe second line contains the grade itself. It's guaranteed that the grade is a positive number, containing at least one digit after the decimal points, and it's representation doesn't finish with 0.\u000aOutput\u000aPrint the maximum grade that Efim can get in t seconds. Do not print trailing zeroes.\u000aExamples\u000ainput\u000a6 1\u000a10.245\u000aoutput\u000a10.25\u000ainput\u000a6 2\u000a10.245\u000aoutput\u000a10.3\u000ainput\u000a3 100\u000a9.2\u000aoutput\u000a9.2\u000aNote\u000aIn the first two samples Efim initially has grade 10.245.\u000aDuring the first second Efim can obtain grade 10.25, and then 10.3 during the next second. Note, that the answer 10.30 will be considered incorrect.\u000aIn the third sample the optimal strategy is to not perform any rounding at all.
p5
sS'name'
p6
VA. Efim and Strange Grade
p7
sS'tags'
p8
Vimplementation 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/718/A
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V1 second
p15
sS'problemId'
p16
V718/A
p17
sS'id'
p18
c__builtin__
id
p19
sb.