(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VC. Coloring Trees\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aZS the Coder and Chris the Baboon has arrived at Udayland! They walked in the park where n trees grow. They decided to be naughty and color the trees in the park. The trees are numbered with integers from 1 to n from left to right.\u000aInitially, tree i has color ci. ZS the Coder and Chris the Baboon recognizes only m different colors, so 0\u2009\u2264\u2009ci\u2009\u2264\u2009m, where ci\u2009=\u20090 means that tree i is uncolored.\u000aZS the Coder and Chris the Baboon decides to color only the uncolored trees, i.e. the trees with ci\u2009=\u20090. They can color each of them them in any of the m colors from 1 to m. Coloring the i-th tree with color j requires exactly pi,\u2009j litres of paint.\u000aThe two friends define the beauty of a coloring of the trees as the minimum number of contiguous groups (each group contains some subsegment of trees) you can split all the n trees into so that each group contains trees of the same color. For example, if the colors of the trees from left to right are 2,\u20091,\u20091,\u20091,\u20093,\u20092,\u20092,\u20093,\u20091,\u20093, the beauty of the coloring is 7, since we can partition the trees into 7 contiguous groups of the same color : {2},\u2009{1,\u20091,\u20091},\u2009{3},\u2009{2,\u20092},\u2009{3},\u2009{1},\u2009{3}.\u000aZS the Coder and Chris the Baboon wants to color all uncolored trees so that the beauty of the coloring is exactly k. They need your help to determine the minimum amount of paint (in litres) needed to finish the job.\u000aPlease note that the friends can't color the trees that are already colored.\u000aInput\u000aThe first line contains three integers, n, m and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009m\u2009\u2264\u2009100) \u2014 the number of trees, number of colors and beauty of the resulting coloring respectively.\u000aThe second line contains n integers c1,\u2009c2,\u2009...,\u2009cn (0\u2009\u2264\u2009ci\u2009\u2264\u2009m), the initial colors of the trees. ci equals to 0 if the tree number i is uncolored, otherwise the i-th tree has color ci.\u000aThen n lines follow. Each of them contains m integers. The j-th number on the i-th of them line denotes pi,\u2009j (1\u2009\u2264\u2009pi,\u2009j\u2009\u2264\u2009109) \u2014 the amount of litres the friends need to color i-th tree with color j. pi,\u2009j's are specified even for the initially colored trees, but such trees still can't be colored.\u000aOutput\u000aPrint a single integer, the minimum amount of paint needed to color the trees. If there are no valid tree colorings of beauty k, print \u2009-\u20091.\u000aExamples\u000ainput\u000a3 2 2\u000a0 0 0\u000a1 2\u000a3 4\u000a5 6\u000aoutput\u000a10\u000ainput\u000a3 2 2\u000a2 1 2\u000a1 3\u000a2 4\u000a3 5\u000aoutput\u000a-1\u000ainput\u000a3 2 2\u000a2 0 0\u000a1 3\u000a2 4\u000a3 5\u000aoutput\u000a5\u000ainput\u000a3 2 3\u000a2 1 2\u000a1 3\u000a2 4\u000a3 5\u000aoutput\u000a0\u000aNote\u000aIn the first sample case, coloring the trees with colors 2,\u20091,\u20091 minimizes the amount of paint used, which equals to 2\u2009+\u20093\u2009+\u20095\u2009=\u200910. Note that 1,\u20091,\u20091 would not be valid because the beauty of such coloring equals to 1 ({1,\u20091,\u20091} is a way to group the trees into a single group of the same color).\u000aIn the second sample case, all the trees are colored, but the beauty of the coloring is 3, so there is no valid coloring, and the answer is \u2009-\u20091.\u000aIn the last sample case, all the trees are colored and the beauty of the coloring matches k, so no paint is used and the answer is 0.
p3
sS'problemStatement'
p4
VC. Coloring Trees\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aZS the Coder and Chris the Baboon has arrived at Udayland! They walked in the park where n trees grow. They decided to be naughty and color the trees in the park. The trees are numbered with integers from 1 to n from left to right.\u000aInitially, tree i has color ci. ZS the Coder and Chris the Baboon recognizes only m different colors, so 0\u2009\u2264\u2009ci\u2009\u2264\u2009m, where ci\u2009=\u20090 means that tree i is uncolored.\u000aZS the Coder and Chris the Baboon decides to color only the uncolored trees, i.e. the trees with ci\u2009=\u20090. They can color each of them them in any of the m colors from 1 to m. Coloring the i-th tree with color j requires exactly pi,\u2009j litres of paint.\u000aThe two friends define the beauty of a coloring of the trees as the minimum number of contiguous groups (each group contains some subsegment of trees) you can split all the n trees into so that each group contains trees of the same color. For example, if the colors of the trees from left to right are 2,\u20091,\u20091,\u20091,\u20093,\u20092,\u20092,\u20093,\u20091,\u20093, the beauty of the coloring is 7, since we can partition the trees into 7 contiguous groups of the same color : {2},\u2009{1,\u20091,\u20091},\u2009{3},\u2009{2,\u20092},\u2009{3},\u2009{1},\u2009{3}.\u000aZS the Coder and Chris the Baboon wants to color all uncolored trees so that the beauty of the coloring is exactly k. They need your help to determine the minimum amount of paint (in litres) needed to finish the job.\u000aPlease note that the friends can't color the trees that are already colored.\u000aInput\u000aThe first line contains three integers, n, m and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009m\u2009\u2264\u2009100) \u2014 the number of trees, number of colors and beauty of the resulting coloring respectively.\u000aThe second line contains n integers c1,\u2009c2,\u2009...,\u2009cn (0\u2009\u2264\u2009ci\u2009\u2264\u2009m), the initial colors of the trees. ci equals to 0 if the tree number i is uncolored, otherwise the i-th tree has color ci.\u000aThen n lines follow. Each of them contains m integers. The j-th number on the i-th of them line denotes pi,\u2009j (1\u2009\u2264\u2009pi,\u2009j\u2009\u2264\u2009109) \u2014 the amount of litres the friends need to color i-th tree with color j. pi,\u2009j's are specified even for the initially colored trees, but such trees still can't be colored.\u000aOutput\u000aPrint a single integer, the minimum amount of paint needed to color the trees. If there are no valid tree colorings of beauty k, print \u2009-\u20091.\u000aExamples\u000ainput\u000a3 2 2\u000a0 0 0\u000a1 2\u000a3 4\u000a5 6\u000aoutput\u000a10\u000ainput\u000a3 2 2\u000a2 1 2\u000a1 3\u000a2 4\u000a3 5\u000aoutput\u000a-1\u000ainput\u000a3 2 2\u000a2 0 0\u000a1 3\u000a2 4\u000a3 5\u000aoutput\u000a5\u000ainput\u000a3 2 3\u000a2 1 2\u000a1 3\u000a2 4\u000a3 5\u000aoutput\u000a0\u000aNote\u000aIn the first sample case, coloring the trees with colors 2,\u20091,\u20091 minimizes the amount of paint used, which equals to 2\u2009+\u20093\u2009+\u20095\u2009=\u200910. Note that 1,\u20091,\u20091 would not be valid because the beauty of such coloring equals to 1 ({1,\u20091,\u20091} is a way to group the trees into a single group of the same color).\u000aIn the second sample case, all the trees are colored, but the beauty of the coloring is 3, so there is no valid coloring, and the answer is \u2009-\u20091.\u000aIn the last sample case, all the trees are colored and the beauty of the coloring matches k, so no paint is used and the answer is 0.
p5
sS'name'
p6
VC. Coloring Trees
p7
sS'tags'
p8
Vdp 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/711/C
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2 seconds
p15
sS'problemId'
p16
V711/C
p17
sS'id'
p18
c__builtin__
id
p19
sb.