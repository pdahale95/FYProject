(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VB3. Recover Polygon (hard)\u000atime limit per test5 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aZombies have found out about the Zombie Contamination level checker and managed to damage it! Now detecting the shape of their main compound will be a real challenge for Heidi. As before, a lair can be represented as a strictly convex polygon on a lattice. Each vertex of the polygon occupies a point on the lattice. However, the damaged Zombie Contamination level checker can only tell, for each cell, whether the level of Zombie Contamination for that cell is in the set {1,\u20092,\u20093}. In other words, Heidi knows all the cells of the lattice for which the Contamination level is not 0 and not 4.\u000aGiven this information, Heidi still wants to know the exact shape of the lair to rain destruction on the zombies. Help her!\u000aInput\u000aThe input contains multiple test cases.\u000aThe first line of each test case contains two space-separated integers N and M, where N is the size of the lattice grid (5\u2009\u2264\u2009N\u2009\u2264\u2009100000) and M is the number of lattice points for which the Zombie Contamination level is 1, 2, or 3 (8\u2009\u2264\u2009M\u2009\u2264\u2009200000).\u000aThe second line of each test case contains M pairs of integers x1,\u2009y1,\u2009...,\u2009xM,\u2009yM \u2013 coordinates of the cells with Zombie Contamination level not equal to 0 nor 4. It is guaranteed that 1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009N. All pairs xi,\u2009yi are different.\u000aCells are enumerated based on the coordinates of their upper right corner. This means that the bottommost leftmost cell that touches the origin has coordinates (1,\u20091), and the uppermost leftmost cell is identified as (1,\u2009N).\u000aThe last line of the file contains two zeroes. This line should not be treated as a test case. The sum of the M values for all tests in one file will not exceed 200000.\u000aOutput\u000aFor each test case, the following output is expected:\u000aThe first line of the output should contain one integer V, the number of vertices of the polygon that is the secret lair. The next V lines each should contain two integers, denoting the vertices of the polygon in the clockwise order, starting from the lexicographically smallest vertex.\u000aExample\u000ainput\u000a8 19\u000a2 3 2 4 2 5 3 3 3 5 4 3 4 5 4 6 5 2 5 3 5 6 6 2 6 3 6 4 6 5 6 6 6 7 7 6 7 7\u000a5 8\u000a2 2 2 3 2 4 3 2 3 4 4 2 4 3 4 4\u000a0 0\u000aoutput\u000a4\u000a2 3\u000a2 4\u000a6 6\u000a5 2\u000a4\u000a2 2\u000a2 3\u000a3 3\u000a3 2\u000aNote\u000aIt is guaranteed that the solution always exists and is unique. It is guaranteed that in the correct solution the coordinates of the polygon vertices are between 1 and N\u2009-\u20091. A vertex (x1,\u2009y1) is lexicographically smaller than vertex (x2,\u2009y2) if x1\u2009<\u2009x2 or .
p3
sS'problemStatement'
p4
VB3. Recover Polygon (hard)\u000atime limit per test5 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aZombies have found out about the Zombie Contamination level checker and managed to damage it! Now detecting the shape of their main compound will be a real challenge for Heidi. As before, a lair can be represented as a strictly convex polygon on a lattice. Each vertex of the polygon occupies a point on the lattice. However, the damaged Zombie Contamination level checker can only tell, for each cell, whether the level of Zombie Contamination for that cell is in the set {1,\u20092,\u20093}. In other words, Heidi knows all the cells of the lattice for which the Contamination level is not 0 and not 4.\u000aGiven this information, Heidi still wants to know the exact shape of the lair to rain destruction on the zombies. Help her!\u000aInput\u000aThe input contains multiple test cases.\u000aThe first line of each test case contains two space-separated integers N and M, where N is the size of the lattice grid (5\u2009\u2264\u2009N\u2009\u2264\u2009100000) and M is the number of lattice points for which the Zombie Contamination level is 1, 2, or 3 (8\u2009\u2264\u2009M\u2009\u2264\u2009200000).\u000aThe second line of each test case contains M pairs of integers x1,\u2009y1,\u2009...,\u2009xM,\u2009yM \u2013 coordinates of the cells with Zombie Contamination level not equal to 0 nor 4. It is guaranteed that 1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009N. All pairs xi,\u2009yi are different.\u000aCells are enumerated based on the coordinates of their upper right corner. This means that the bottommost leftmost cell that touches the origin has coordinates (1,\u20091), and the uppermost leftmost cell is identified as (1,\u2009N).\u000aThe last line of the file contains two zeroes. This line should not be treated as a test case. The sum of the M values for all tests in one file will not exceed 200000.\u000aOutput\u000aFor each test case, the following output is expected:\u000aThe first line of the output should contain one integer V, the number of vertices of the polygon that is the secret lair. The next V lines each should contain two integers, denoting the vertices of the polygon in the clockwise order, starting from the lexicographically smallest vertex.\u000aExample\u000ainput\u000a8 19\u000a2 3 2 4 2 5 3 3 3 5 4 3 4 5 4 6 5 2 5 3 5 6 6 2 6 3 6 4 6 5 6 6 6 7 7 6 7 7\u000a5 8\u000a2 2 2 3 2 4 3 2 3 4 4 2 4 3 4 4\u000a0 0\u000aoutput\u000a4\u000a2 3\u000a2 4\u000a6 6\u000a5 2\u000a4\u000a2 2\u000a2 3\u000a3 3\u000a3 2\u000aNote\u000aIt is guaranteed that the solution always exists and is unique. It is guaranteed that in the correct solution the coordinates of the polygon vertices are between 1 and N\u2009-\u20091. A vertex (x1,\u2009y1) is lexicographically smaller than vertex (x2,\u2009y2) if x1\u2009<\u2009x2 or .
p5
sS'name'
p6
VB3. Recover Polygon (hard)
p7
sS'tags'
p8
S''
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/690/B3
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V5 seconds
p15
sS'output'
p16
(lp17
VOutput
p18
aVFor each test case, the following output is expected:
p19
aVThe first line of the output should contain one integer V, the number of vertices of the polygon that is the secret lair. The next V lines each should contain two integers, denoting the vertices of the polygon in the clockwise order, starting from the lexicographically smallest vertex.
p20
asS'statement'
p21
(lp22
VB3. Recover Polygon (hard)
p23
aVtime limit per test5 seconds
p24
aVmemory limit per test256 megabytes
p25
aVinputstandard input
p26
aVoutputstandard output
p27
aVZombies have found out about the Zombie Contamination level checker and managed to damage it! Now detecting the shape of their main compound will be a real challenge for Heidi. As before, a lair can be represented as a strictly convex polygon on a lattice. Each vertex of the polygon occupies a point on the lattice. However, the damaged Zombie Contamination level checker can only tell, for each cell, whether the level of Zombie Contamination for that cell is in the set {1,\u20092,\u20093}. In other words, Heidi knows all the cells of the lattice for which the Contamination level is not 0 and not 4.
p28
aVGiven this information, Heidi still wants to know the exact shape of the lair to rain destruction on the zombies. Help her!
p29
asS'problemId'
p30
V690/B3
p31
sS'input'
p32
(lp33
VInput
p34
aVThe input contains multiple test cases.
p35
aVThe first line of each test case contains two space-separated integers N and M, where N is the size of the lattice grid (5\u2009\u2264\u2009N\u2009\u2264\u2009100000) and M is the number of lattice points for which the Zombie Contamination level is 1, 2, or 3 (8\u2009\u2264\u2009M\u2009\u2264\u2009200000).
p36
aVThe second line of each test case contains M pairs of integers x1,\u2009y1,\u2009...,\u2009xM,\u2009yM \u2013 coordinates of the cells with Zombie Contamination level not equal to 0 nor 4. It is guaranteed that 1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009N. All pairs xi,\u2009yi are different.
p37
aVCells are enumerated based on the coordinates of their upper right corner. This means that the bottommost leftmost cell that touches the origin has coordinates (1,\u20091), and the uppermost leftmost cell is identified as (1,\u2009N).
p38
aVThe last line of the file contains two zeroes. This line should not be treated as a test case. The sum of the M values for all tests in one file will not exceed 200000.
p39
asS'id'
p40
c__builtin__
id
p41
sS'constraints'
p42
g33
sb.