(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VA. One-dimensional Japanese Crossword\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aRecently Adaltik discovered japanese crosswords. Japanese crossword is a picture, represented as a table sized a\u2009×\u2009b squares, and each square is colored white or black. There are integers to the left of the rows and to the top of the columns, encrypting the corresponding row or column. The number of integers represents how many groups of black squares there are in corresponding row or column, and the integers themselves represents the number of consecutive black squares in corresponding group (you can find more detailed explanation in Wikipedia https://en.wikipedia.org/wiki/Japanese_crossword).\u000aAdaltik decided that the general case of japanese crossword is too complicated and drew a row consisting of n squares (e.g. japanese crossword sized 1\u2009×\u2009n), which he wants to encrypt in the same way as in japanese crossword.\u000aThe example of encrypting of a single row of japanese crossword.\u000aHelp Adaltik find the numbers encrypting the row he drew.\u000aInput\u000aThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the length of the row. The second line of the input contains a single string consisting of n characters 'B' or 'W', ('B' corresponds to black square, 'W' \u2014 to white square in the row that Adaltik drew).\u000aOutput\u000aThe first line should contain a single integer k \u2014 the number of integers encrypting the row, e.g. the number of groups of black squares in the row.\u000aThe second line should contain k integers, encrypting the row, e.g. corresponding to sizes of groups of consecutive black squares in the order from left to right.\u000aExamples\u000ainput\u000a3\u000aBBW\u000aoutput\u000a1\u000a2 \u000ainput\u000a5\u000aBWBWB\u000aoutput\u000a3\u000a1 1 1 \u000ainput\u000a4\u000aWWWW\u000aoutput\u000a0\u000ainput\u000a4\u000aBBBB\u000aoutput\u000a1\u000a4 \u000ainput\u000a13\u000aWBBBBWWBWBBBW\u000aoutput\u000a3\u000a4 1 3 \u000aNote\u000aThe last sample case correspond to the picture in the statement.
p3
sS'problemStatement'
p4
VA. One-dimensional Japanese Crossword\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aRecently Adaltik discovered japanese crosswords. Japanese crossword is a picture, represented as a table sized a\u2009×\u2009b squares, and each square is colored white or black. There are integers to the left of the rows and to the top of the columns, encrypting the corresponding row or column. The number of integers represents how many groups of black squares there are in corresponding row or column, and the integers themselves represents the number of consecutive black squares in corresponding group (you can find more detailed explanation in Wikipedia https://en.wikipedia.org/wiki/Japanese_crossword).\u000aAdaltik decided that the general case of japanese crossword is too complicated and drew a row consisting of n squares (e.g. japanese crossword sized 1\u2009×\u2009n), which he wants to encrypt in the same way as in japanese crossword.\u000aThe example of encrypting of a single row of japanese crossword.\u000aHelp Adaltik find the numbers encrypting the row he drew.\u000aInput\u000aThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the length of the row. The second line of the input contains a single string consisting of n characters 'B' or 'W', ('B' corresponds to black square, 'W' \u2014 to white square in the row that Adaltik drew).\u000aOutput\u000aThe first line should contain a single integer k \u2014 the number of integers encrypting the row, e.g. the number of groups of black squares in the row.\u000aThe second line should contain k integers, encrypting the row, e.g. corresponding to sizes of groups of consecutive black squares in the order from left to right.\u000aExamples\u000ainput\u000a3\u000aBBW\u000aoutput\u000a1\u000a2 \u000ainput\u000a5\u000aBWBWB\u000aoutput\u000a3\u000a1 1 1 \u000ainput\u000a4\u000aWWWW\u000aoutput\u000a0\u000ainput\u000a4\u000aBBBB\u000aoutput\u000a1\u000a4 \u000ainput\u000a13\u000aWBBBBWWBWBBBW\u000aoutput\u000a3\u000a4 1 3 \u000aNote\u000aThe last sample case correspond to the picture in the statement.
p5
sS'name'
p6
VA. One-dimensional Japanese Crossword
p7
sS'tags'
p8
Vimplementation 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/721/A
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V1 second
p15
sS'problemId'
p16
V721/A
p17
sS'id'
p18
c__builtin__
id
p19
sb.