(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VC. Alyona and the Tree\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aAlyona decided to go on a diet and went to the forest to get some apples. There she unexpectedly found a magic rooted tree with root in the vertex 1, every vertex and every edge of which has a number written on.\u000aThe girl noticed that some of the tree's vertices are sad, so she decided to play with them. Let's call vertex v sad if there is a vertex u in subtree of vertex v such that dist(v,\u2009u)\u2009>\u2009au, where au is the number written on vertex u, dist(v,\u2009u) is the sum of the numbers written on the edges on the path from v to u.\u000aLeaves of a tree are vertices connected to a single vertex by a single edge, but the root of a tree is a leaf if and only if the tree consists of a single vertex \u2014 root.\u000aThus Alyona decided to remove some of tree leaves until there will be no any sad vertex left in the tree. What is the minimum number of leaves Alyona needs to remove?\u000aInput\u000aIn the first line of the input integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) is given \u2014 the number of vertices in the tree.\u000aIn the second line the sequence of n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) is given, where ai is the number written on vertex i.\u000aThe next n\u2009-\u20091 lines describe tree edges: ith of them consists of two integers pi and ci (1\u2009\u2264\u2009pi\u2009\u2264\u2009n, \u2009-\u2009109\u2009\u2264\u2009ci\u2009\u2264\u2009109), meaning that there is an edge connecting vertices i\u2009+\u20091 and pi with number ci written on it.\u000aOutput\u000aPrint the only integer \u2014 the minimum number of leaves Alyona needs to remove such that there will be no any sad vertex left in the tree.\u000aExample\u000ainput\u000a9\u000a88 22 83 14 95 91 98 53 11\u000a3 24\u000a7 -8\u000a1 67\u000a1 64\u000a9 65\u000a5 12\u000a6 -80\u000a3 8\u000aoutput\u000a5\u000aNote\u000aThe following image represents possible process of removing leaves from the tree:
p3
sS'problemStatement'
p4
VC. Alyona and the Tree\u000atime limit per test1 second\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aAlyona decided to go on a diet and went to the forest to get some apples. There she unexpectedly found a magic rooted tree with root in the vertex 1, every vertex and every edge of which has a number written on.\u000aThe girl noticed that some of the tree's vertices are sad, so she decided to play with them. Let's call vertex v sad if there is a vertex u in subtree of vertex v such that dist(v,\u2009u)\u2009>\u2009au, where au is the number written on vertex u, dist(v,\u2009u) is the sum of the numbers written on the edges on the path from v to u.\u000aLeaves of a tree are vertices connected to a single vertex by a single edge, but the root of a tree is a leaf if and only if the tree consists of a single vertex \u2014 root.\u000aThus Alyona decided to remove some of tree leaves until there will be no any sad vertex left in the tree. What is the minimum number of leaves Alyona needs to remove?\u000aInput\u000aIn the first line of the input integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) is given \u2014 the number of vertices in the tree.\u000aIn the second line the sequence of n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) is given, where ai is the number written on vertex i.\u000aThe next n\u2009-\u20091 lines describe tree edges: ith of them consists of two integers pi and ci (1\u2009\u2264\u2009pi\u2009\u2264\u2009n, \u2009-\u2009109\u2009\u2264\u2009ci\u2009\u2264\u2009109), meaning that there is an edge connecting vertices i\u2009+\u20091 and pi with number ci written on it.\u000aOutput\u000aPrint the only integer \u2014 the minimum number of leaves Alyona needs to remove such that there will be no any sad vertex left in the tree.\u000aExample\u000ainput\u000a9\u000a88 22 83 14 95 91 98 53 11\u000a3 24\u000a7 -8\u000a1 67\u000a1 64\u000a9 65\u000a5 12\u000a6 -80\u000a3 8\u000aoutput\u000a5\u000aNote\u000aThe following image represents possible process of removing leaves from the tree:
p5
sS'name'
p6
VC. Alyona and the Tree
p7
sS'tags'
p8
Vdfs and similar dp trees 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/682/C
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V1 second
p15
sS'output'
p16
(lp17
VOutput
p18
aVPrint the only integer \u2014 the minimum number of leaves Alyona needs to remove such that there will be no any sad vertex left in the tree.
p19
asS'statement'
p20
(lp21
VC. Alyona and the Tree
p22
aVtime limit per test1 second
p23
aVmemory limit per test256 megabytes
p24
aVinputstandard input
p25
aVoutputstandard output
p26
aVAlyona decided to go on a diet and went to the forest to get some apples. There she unexpectedly found a magic rooted tree with root in the vertex 1, every vertex and every edge of which has a number written on.
p27
aVThe girl noticed that some of the tree's vertices are sad, so she decided to play with them. Let's call vertex v sad if there is a vertex u in subtree of vertex v such that dist(v,\u2009u)\u2009>\u2009au, where au is the number written on vertex u, dist(v,\u2009u) is the sum of the numbers written on the edges on the path from v to u.
p28
aVLeaves of a tree are vertices connected to a single vertex by a single edge, but the root of a tree is a leaf if and only if the tree consists of a single vertex \u2014 root.
p29
aVThus Alyona decided to remove some of tree leaves until there will be no any sad vertex left in the tree. What is the minimum number of leaves Alyona needs to remove?
p30
asS'problemId'
p31
V682/C
p32
sS'input'
p33
(lp34
VInput
p35
aVIn the first line of the input integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) is given \u2014 the number of vertices in the tree.
p36
aVIn the second line the sequence of n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) is given, where ai is the number written on vertex i.
p37
aVThe next n\u2009-\u20091 lines describe tree edges: ith of them consists of two integers pi and ci (1\u2009\u2264\u2009pi\u2009\u2264\u2009n, \u2009-\u2009109\u2009\u2264\u2009ci\u2009\u2264\u2009109), meaning that there is an edge connecting vertices i\u2009+\u20091 and pi with number ci written on it.
p38
asS'id'
p39
c__builtin__
id
p40
sS'constraints'
p41
g34
sb.