(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VC. Bear and Square Grid\u000atime limit per test3 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aYou have a grid with n rows and n columns. Each cell is either empty (denoted by '.') or blocked (denoted by 'X').\u000aTwo empty cells are directly connected if they share a side. Two cells (r1,\u2009c1) (located in the row r1 and column c1) and (r2,\u2009c2) are connected if there exists a sequence of empty cells that starts with (r1,\u2009c1), finishes with (r2,\u2009c2), and any two consecutive cells in this sequence are directly connected. A connected component is a set of empty cells such that any two cells in the component are connected, and there is no cell in this set that is connected to some cell not in this set.\u000aYour friend Limak is a big grizzly bear. He is able to destroy any obstacles in some range. More precisely, you can choose a square of size k\u2009×\u2009k in the grid and Limak will transform all blocked cells there to empty ones. However, you can ask Limak to help only once.\u000aThe chosen square must be completely inside the grid. It's possible that Limak won't change anything because all cells are empty anyway.\u000aYou like big connected components. After Limak helps you, what is the maximum possible size of the biggest connected component in the grid?\u000aInput\u000aThe first line of the input contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009500) \u2014 the size of the grid and Limak's range, respectively.\u000aEach of the next n lines contains a string with n characters, denoting the i-th row of the grid. Each character is '.' or 'X', denoting an empty cell or a blocked one, respectively.\u000aOutput\u000aPrint the maximum possible size (the number of cells) of the biggest connected component, after using Limak's help.\u000aExamples\u000ainput\u000a5 2\u000a..XXX\u000aXX.XX\u000aX.XXX\u000aX...X\u000aXXXX.\u000aoutput\u000a10\u000ainput\u000a5 3\u000a.....\u000a.XXX.\u000a.XXX.\u000a.XXX.\u000a.....\u000aoutput\u000a25\u000aNote\u000aIn the first sample, you can choose a square of size 2\u2009×\u20092. It's optimal to choose a square in the red frame on the left drawing below. Then, you will get a connected component with 10 cells, marked blue in the right drawing.
p3
sS'problemStatement'
p4
VC. Bear and Square Grid\u000atime limit per test3 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aYou have a grid with n rows and n columns. Each cell is either empty (denoted by '.') or blocked (denoted by 'X').\u000aTwo empty cells are directly connected if they share a side. Two cells (r1,\u2009c1) (located in the row r1 and column c1) and (r2,\u2009c2) are connected if there exists a sequence of empty cells that starts with (r1,\u2009c1), finishes with (r2,\u2009c2), and any two consecutive cells in this sequence are directly connected. A connected component is a set of empty cells such that any two cells in the component are connected, and there is no cell in this set that is connected to some cell not in this set.\u000aYour friend Limak is a big grizzly bear. He is able to destroy any obstacles in some range. More precisely, you can choose a square of size k\u2009×\u2009k in the grid and Limak will transform all blocked cells there to empty ones. However, you can ask Limak to help only once.\u000aThe chosen square must be completely inside the grid. It's possible that Limak won't change anything because all cells are empty anyway.\u000aYou like big connected components. After Limak helps you, what is the maximum possible size of the biggest connected component in the grid?\u000aInput\u000aThe first line of the input contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009500) \u2014 the size of the grid and Limak's range, respectively.\u000aEach of the next n lines contains a string with n characters, denoting the i-th row of the grid. Each character is '.' or 'X', denoting an empty cell or a blocked one, respectively.\u000aOutput\u000aPrint the maximum possible size (the number of cells) of the biggest connected component, after using Limak's help.\u000aExamples\u000ainput\u000a5 2\u000a..XXX\u000aXX.XX\u000aX.XXX\u000aX...X\u000aXXXX.\u000aoutput\u000a10\u000ainput\u000a5 3\u000a.....\u000a.XXX.\u000a.XXX.\u000a.XXX.\u000a.....\u000aoutput\u000a25\u000aNote\u000aIn the first sample, you can choose a square of size 2\u2009×\u20092. It's optimal to choose a square in the red frame on the left drawing below. Then, you will get a connected component with 10 cells, marked blue in the right drawing.
p5
sS'name'
p6
VC. Bear and Square Grid
p7
sS'tags'
p8
Vdfs and similar dsu implementation 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/679/C
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V3 seconds
p15
sS'problemId'
p16
V679/C
p17
sS'id'
p18
c__builtin__
id
p19
sb.