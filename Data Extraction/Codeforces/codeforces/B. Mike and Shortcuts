(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VB. Mike and Shortcuts\u000atime limit per test3 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aRecently, Mike was very busy with studying for exams and contests. Now he is going to chill a bit by doing some sight seeing in the city.\u000aCity consists of n intersections numbered from 1 to n. Mike starts walking from his house located at the intersection number 1 and goes along some sequence of intersections. Walking from intersection number i to intersection j requires |i\u2009-\u2009j| units of energy. The total energy spent by Mike to visit a sequence of intersections p1\u2009=\u20091,\u2009p2,\u2009...,\u2009pk is equal to units of energy.\u000aOf course, walking would be boring if there were no shortcuts. A shortcut is a special path that allows Mike walking from one intersection to another requiring only 1 unit of energy. There are exactly n shortcuts in Mike's city, the ith of them allows walking from intersection i to intersection ai (i\u2009\u2264\u2009ai\u2009\u2264\u2009ai\u2009+\u20091) (but not in the opposite direction), thus there is exactly one shortcut starting at each intersection. Formally, if Mike chooses a sequence p1\u2009=\u20091,\u2009p2,\u2009...,\u2009pk then for each 1\u2009\u2264\u2009i\u2009<\u2009k satisfying pi\u2009+\u20091\u2009=\u2009api and api\u2009\u2260\u2009pi Mike will spend only 1 unit of energy instead of |pi\u2009-\u2009pi\u2009+\u20091| walking from the intersection pi to intersection pi\u2009+\u20091. For example, if Mike chooses a sequence p1\u2009=\u20091,\u2009p2\u2009=\u2009ap1,\u2009p3\u2009=\u2009ap2,\u2009...,\u2009pk\u2009=\u2009apk\u2009-\u20091, he spends exactly k\u2009-\u20091 units of total energy walking around them.\u000aBefore going on his adventure, Mike asks you to find the minimum amount of energy required to reach each of the intersections from his home. Formally, for each 1\u2009\u2264\u2009i\u2009\u2264\u2009n Mike is interested in finding minimum possible total energy of some sequence p1\u2009=\u20091,\u2009p2,\u2009...,\u2009pk\u2009=\u2009i.\u000aInput\u000aThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000) \u2014 the number of Mike's city intersection.\u000aThe second line contains n integers a1,\u2009a2,\u2009...,\u2009an (i\u2009\u2264\u2009ai\u2009\u2264\u2009n , , describing shortcuts of Mike's city, allowing to walk from intersection i to intersection ai using only 1 unit of energy. Please note that the shortcuts don't allow walking in opposite directions (from ai to i).\u000aOutput\u000aIn the only line print n integers m1,\u2009m2,\u2009...,\u2009mn, where mi denotes the least amount of total energy required to walk from intersection 1 to intersection i.\u000aExamples\u000ainput\u000a3\u000a2 2 3\u000aoutput\u000a0 1 2 \u000ainput\u000a5\u000a1 2 3 4 5\u000aoutput\u000a0 1 2 3 4 \u000ainput\u000a7\u000a4 4 4 4 7 7 7\u000aoutput\u000a0 1 2 1 2 3 3 \u000aNote\u000aIn the first sample case desired sequences are:\u000a1:\u20091; m1\u2009=\u20090;\u000a2:\u20091,\u20092; m2\u2009=\u20091;\u000a3:\u20091,\u20093; m3\u2009=\u2009|3\u2009-\u20091|\u2009=\u20092.\u000aIn the second sample case the sequence for any intersection 1\u2009<\u2009i is always 1,\u2009i and mi\u2009=\u2009|1\u2009-\u2009i|.\u000aIn the third sample case \u2014 consider the following intersection sequences:\u000a1:\u20091; m1\u2009=\u20090;\u000a2:\u20091,\u20092; m2\u2009=\u2009|2\u2009-\u20091|\u2009=\u20091;\u000a3:\u20091,\u20094,\u20093; m3\u2009=\u20091\u2009+\u2009|4\u2009-\u20093|\u2009=\u20092;\u000a4:\u20091,\u20094; m4\u2009=\u20091;\u000a5:\u20091,\u20094,\u20095; m5\u2009=\u20091\u2009+\u2009|4\u2009-\u20095|\u2009=\u20092;\u000a6:\u20091,\u20094,\u20096; m6\u2009=\u20091\u2009+\u2009|4\u2009-\u20096|\u2009=\u20093;\u000a7:\u20091,\u20094,\u20095,\u20097; m7\u2009=\u20091\u2009+\u2009|4\u2009-\u20095|\u2009+\u20091\u2009=\u20093.
p3
sS'problemStatement'
p4
VB. Mike and Shortcuts\u000atime limit per test3 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aRecently, Mike was very busy with studying for exams and contests. Now he is going to chill a bit by doing some sight seeing in the city.\u000aCity consists of n intersections numbered from 1 to n. Mike starts walking from his house located at the intersection number 1 and goes along some sequence of intersections. Walking from intersection number i to intersection j requires |i\u2009-\u2009j| units of energy. The total energy spent by Mike to visit a sequence of intersections p1\u2009=\u20091,\u2009p2,\u2009...,\u2009pk is equal to units of energy.\u000aOf course, walking would be boring if there were no shortcuts. A shortcut is a special path that allows Mike walking from one intersection to another requiring only 1 unit of energy. There are exactly n shortcuts in Mike's city, the ith of them allows walking from intersection i to intersection ai (i\u2009\u2264\u2009ai\u2009\u2264\u2009ai\u2009+\u20091) (but not in the opposite direction), thus there is exactly one shortcut starting at each intersection. Formally, if Mike chooses a sequence p1\u2009=\u20091,\u2009p2,\u2009...,\u2009pk then for each 1\u2009\u2264\u2009i\u2009<\u2009k satisfying pi\u2009+\u20091\u2009=\u2009api and api\u2009\u2260\u2009pi Mike will spend only 1 unit of energy instead of |pi\u2009-\u2009pi\u2009+\u20091| walking from the intersection pi to intersection pi\u2009+\u20091. For example, if Mike chooses a sequence p1\u2009=\u20091,\u2009p2\u2009=\u2009ap1,\u2009p3\u2009=\u2009ap2,\u2009...,\u2009pk\u2009=\u2009apk\u2009-\u20091, he spends exactly k\u2009-\u20091 units of total energy walking around them.\u000aBefore going on his adventure, Mike asks you to find the minimum amount of energy required to reach each of the intersections from his home. Formally, for each 1\u2009\u2264\u2009i\u2009\u2264\u2009n Mike is interested in finding minimum possible total energy of some sequence p1\u2009=\u20091,\u2009p2,\u2009...,\u2009pk\u2009=\u2009i.\u000aInput\u000aThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000) \u2014 the number of Mike's city intersection.\u000aThe second line contains n integers a1,\u2009a2,\u2009...,\u2009an (i\u2009\u2264\u2009ai\u2009\u2264\u2009n , , describing shortcuts of Mike's city, allowing to walk from intersection i to intersection ai using only 1 unit of energy. Please note that the shortcuts don't allow walking in opposite directions (from ai to i).\u000aOutput\u000aIn the only line print n integers m1,\u2009m2,\u2009...,\u2009mn, where mi denotes the least amount of total energy required to walk from intersection 1 to intersection i.\u000aExamples\u000ainput\u000a3\u000a2 2 3\u000aoutput\u000a0 1 2 \u000ainput\u000a5\u000a1 2 3 4 5\u000aoutput\u000a0 1 2 3 4 \u000ainput\u000a7\u000a4 4 4 4 7 7 7\u000aoutput\u000a0 1 2 1 2 3 3 \u000aNote\u000aIn the first sample case desired sequences are:\u000a1:\u20091; m1\u2009=\u20090;\u000a2:\u20091,\u20092; m2\u2009=\u20091;\u000a3:\u20091,\u20093; m3\u2009=\u2009|3\u2009-\u20091|\u2009=\u20092.\u000aIn the second sample case the sequence for any intersection 1\u2009<\u2009i is always 1,\u2009i and mi\u2009=\u2009|1\u2009-\u2009i|.\u000aIn the third sample case \u2014 consider the following intersection sequences:\u000a1:\u20091; m1\u2009=\u20090;\u000a2:\u20091,\u20092; m2\u2009=\u2009|2\u2009-\u20091|\u2009=\u20091;\u000a3:\u20091,\u20094,\u20093; m3\u2009=\u20091\u2009+\u2009|4\u2009-\u20093|\u2009=\u20092;\u000a4:\u20091,\u20094; m4\u2009=\u20091;\u000a5:\u20091,\u20094,\u20095; m5\u2009=\u20091\u2009+\u2009|4\u2009-\u20095|\u2009=\u20092;\u000a6:\u20091,\u20094,\u20096; m6\u2009=\u20091\u2009+\u2009|4\u2009-\u20096|\u2009=\u20093;\u000a7:\u20091,\u20094,\u20095,\u20097; m7\u2009=\u20091\u2009+\u2009|4\u2009-\u20095|\u2009+\u20091\u2009=\u20093.
p5
sS'name'
p6
VB. Mike and Shortcuts
p7
sS'tags'
p8
Vdfs and similar 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/689/B
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V3 seconds
p15
sS'problemId'
p16
V689/B
p17
sS'id'
p18
c__builtin__
id
p19
sb.