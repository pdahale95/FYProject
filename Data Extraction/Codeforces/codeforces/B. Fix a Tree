(iCodeforcesProblem
CodeforcesProblem
p0
(dp1
S'desription'
p2
VB. Fix a Tree\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aA tree is an undirected connected graph without cycles.\u000aLet's consider a rooted undirected tree with n vertices, numbered 1 through n. There are many ways to represent such a tree. One way is to create an array with n integers p1,\u2009p2,\u2009...,\u2009pn, where pi denotes a parent of vertex i (here, for convenience a root is considered its own parent).\u000aFor this rooted tree the array p is [2,\u20093,\u20093,\u20092].\u000aGiven a sequence p1,\u2009p2,\u2009...,\u2009pn, one is able to restore a tree:\u000aThere must be exactly one index r that pr\u2009=\u2009r. A vertex r is a root of the tree.\u000aFor all other n\u2009-\u20091 vertices i, there is an edge between vertex i and vertex pi.\u000aA sequence p1,\u2009p2,\u2009...,\u2009pn is called valid if the described procedure generates some (any) rooted tree. For example, for n\u2009=\u20093 sequences (1,2,2), (2,3,1) and (2,1,3) are not valid.\u000aYou are given a sequence a1,\u2009a2,\u2009...,\u2009an, not necessarily valid. Your task is to change the minimum number of elements, in order to get a valid sequence. Print the minimum number of changes and an example of a valid sequence after that number of changes. If there are many valid sequences achievable in the minimum number of changes, print any of them.\u000aInput\u000aThe first line of the input contains an integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000) \u2014 the number of vertices in the tree.\u000aThe second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009n).\u000aOutput\u000aIn the first line print the minimum number of elements to change, in order to get a valid sequence.\u000aIn the second line, print any valid sequence possible to get from (a1,\u2009a2,\u2009...,\u2009an) in the minimum number of changes. If there are many such sequences, any of them will be accepted.\u000aExamples\u000ainput\u000a4\u000a2 3 3 4\u000aoutput\u000a1\u000a2 3 4 4 \u000ainput\u000a5\u000a3 2 2 5 3\u000aoutput\u000a0\u000a3 2 2 5 3 \u000ainput\u000a8\u000a2 3 5 4 1 6 6 7\u000aoutput\u000a2\u000a2 3 7 8 1 6 6 7\u000aNote\u000aIn the first sample, it's enough to change one element. In the provided output, a sequence represents a tree rooted in a vertex 4 (because p4\u2009=\u20094), which you can see on the left drawing below. One of other correct solutions would be a sequence 2 3 3 2, representing a tree rooted in vertex 3 (right drawing below). On both drawings, roots are painted red.\u000aIn the second sample, the given sequence is already valid.
p3
sS'problemStatement'
p4
VB. Fix a Tree\u000atime limit per test2 seconds\u000amemory limit per test256 megabytes\u000ainputstandard input\u000aoutputstandard output\u000aA tree is an undirected connected graph without cycles.\u000aLet's consider a rooted undirected tree with n vertices, numbered 1 through n. There are many ways to represent such a tree. One way is to create an array with n integers p1,\u2009p2,\u2009...,\u2009pn, where pi denotes a parent of vertex i (here, for convenience a root is considered its own parent).\u000aFor this rooted tree the array p is [2,\u20093,\u20093,\u20092].\u000aGiven a sequence p1,\u2009p2,\u2009...,\u2009pn, one is able to restore a tree:\u000aThere must be exactly one index r that pr\u2009=\u2009r. A vertex r is a root of the tree.\u000aFor all other n\u2009-\u20091 vertices i, there is an edge between vertex i and vertex pi.\u000aA sequence p1,\u2009p2,\u2009...,\u2009pn is called valid if the described procedure generates some (any) rooted tree. For example, for n\u2009=\u20093 sequences (1,2,2), (2,3,1) and (2,1,3) are not valid.\u000aYou are given a sequence a1,\u2009a2,\u2009...,\u2009an, not necessarily valid. Your task is to change the minimum number of elements, in order to get a valid sequence. Print the minimum number of changes and an example of a valid sequence after that number of changes. If there are many valid sequences achievable in the minimum number of changes, print any of them.\u000aInput\u000aThe first line of the input contains an integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000) \u2014 the number of vertices in the tree.\u000aThe second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009n).\u000aOutput\u000aIn the first line print the minimum number of elements to change, in order to get a valid sequence.\u000aIn the second line, print any valid sequence possible to get from (a1,\u2009a2,\u2009...,\u2009an) in the minimum number of changes. If there are many such sequences, any of them will be accepted.\u000aExamples\u000ainput\u000a4\u000a2 3 3 4\u000aoutput\u000a1\u000a2 3 4 4 \u000ainput\u000a5\u000a3 2 2 5 3\u000aoutput\u000a0\u000a3 2 2 5 3 \u000ainput\u000a8\u000a2 3 5 4 1 6 6 7\u000aoutput\u000a2\u000a2 3 7 8 1 6 6 7\u000aNote\u000aIn the first sample, it's enough to change one element. In the provided output, a sequence represents a tree rooted in a vertex 4 (because p4\u2009=\u20094), which you can see on the left drawing below. One of other correct solutions would be a sequence 2 3 3 2, representing a tree rooted in vertex 3 (right drawing below). On both drawings, roots are painted red.\u000aIn the second sample, the given sequence is already valid.
p5
sS'name'
p6
VB. Fix a Tree
p7
sS'tags'
p8
Vconstructive algorithms dfs and similar dsu trees 
p9
sS'url'
p10
Vhttp://codeforces.com/problemset/problem/698/B
p11
sS'memorylimit'
p12
V256 megabytes
p13
sS'timelimit'
p14
V2 seconds
p15
sS'problemId'
p16
V698/B
p17
sS'id'
p18
c__builtin__
id
p19
sb.