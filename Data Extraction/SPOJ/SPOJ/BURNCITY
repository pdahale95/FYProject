(ispojProblem
SpojProblem
p0
(dp1
S'languages'
p2
VAll except: NODEJS PERL 6 VB.net
p3
sS'output'
p4
(lp5
VOutput For the i-th test case output a line containing the text 'city i Y' if you want to solve the test case or 'city i N' if you wish to leave it out. i i i If you chose to the solve the test case, in the next line output a sequence of exactly h characters 'N', 'S', 'W', 'E', '+' or '-', corresponding to Johnny's actions in successive minutes (moving North, South, West and East on the map, dropping dynamite, not doing anything, respectively). h Score The total score is the total number of rescued squares with buildings taken over all test cases. 
p6
asS'description'
p7
V From up there in the sky Johnny can see the city as a square, sliced into smaller, identical squares by a regular grid of streets. Every square contains one of three kinds of terrain - buildings, grassland or water (perhaps most firemen would go into further detail when analysing terrain, but you really can't expect that from a firefighter whose preferred method of extinguishing fires is dynamite, can you?). Johnny starts out in the centre of the square corresponding to the fire station. In the time from the start of a minute to the end of that minute he can move to the center of one of the four adjacent squares (but he is not allowed to leave the city). While over the center of a square he can choose to drop a single dynamite charge on it. He starts preparing the charge at the beginning of a minute, and it is dropped from the helicopter at the end of the same minute. Everything on the square on which the bomb was dropped is blown apart, and in its place a crater is formed and instantly flooded by subterranean waters. The fire spreads in a most predictable way: if a square starts burning at the beginning of minute m, then all four adjacent squares will catch fire at the start of minute (m+2). The only exception is a square filled with water (either naturally, or by Johnny's bombs) which never catches fire. If a square starts burning, all property on it is instantly destroyed. Once a square starts burning it will only stop burning if Johnny blows it up, or when the monsoon rain comes and floods the city, at the end of the h-th minute of firefighting. m h Johnny's main objective is to save as many squares with buildings as possible (from fire and dynamite). An example of the fire fighting process is presented below.  Input The first line of input contains a single integer t<=500, the number of test cases. t The first line of every test case contains five integers n c h sx sy, respectively denoting: n - the length of one side of the city (measured in squares), c - the number of dynamite charges Johnny can use, h - the number of minutes after which the rain falls, sx, sy - the x and y coordinates of the square containing the fire-station from which Johnny starts, measured relative to the North-West corner of the city (1<=sx, sy<=n<=50, 0<=c<=h<=5*n; there are about 10 test cases for all possible values of n). Finally, the map of the city is given in the form of n lines of n characters each, each corresponding to the state of a square at the start of the fire fighting ('b' - building, 'g' - grassland, 'w' - water, 'f' - fire). n c h sx sy x y n c h sx x sy y x y sx x sy y n c h n n n n Output For the i-th test case output a line containing the text 'city i Y' if you want to solve the test case or 'city i N' if you wish to leave it out. i i i If you chose to the solve the test case, in the next line output a sequence of exactly h characters 'N', 'S', 'W', 'E', '+' or '-', corresponding to Johnny's actions in successive minutes (moving North, South, West and East on the map, dropping dynamite, not doing anything, respectively). h Score The total score is the total number of rescued squares with buildings taken over all test cases. Example Input:\u000a5\u000a3 2 9 1 1\u000abgg\u000abbg\u000abbf\u000a4 2 8 3 1\u000abbbb\u000abgwg\u000afwgg\u000agbbb\u000a4 3 15 2 1\u000abbbb\u000abbbb\u000abbbb\u000afbbb\u000a4 3 15 2 1\u000abbbf\u000abbbb\u000abbbb\u000afbbb\u000a4 3 15 2 1\u000abbbf\u000abbbb\u000abbbb\u000afbbb\u000a\u000aOutput:\u000acity 1 Y\u000aS+E---N+-\u000acity 2 Y\u000aW+SSS+--\u000acity 3 Y\u000aESE+SW+S+------\u000acity 4 Y\u000a+EES+W+--------\u000acity 5 Y\u000a+ES+-E+--------\u000a\u000aScore:\u000a9 Input: Output: Score: (The first test case is illustrated in the figure and Johnny can save one building. In testcases 2, 3, 4, 5 Johnny saves 4, 2, 2 and 0 buildings, respectively). Bonus info: The three digit number after the decimal point of your score denotes the number of test cases you have solved correctly, rescuing at least one building. Bonus info Warning: large Input/Output data, be careful with certain languages
p8
sS'tags'
p9
S''
p10
sS'url'
p11
Vhttp://www.spoj.com/problems/BURNCITY
p12
sS'addedBy'
p13
Vmima
p14
sS'memorylimit'
p15
V1536MB
p16
sS'cluster'
p17
VCube (Intel G860)
p18
sS'timelimit'
p19
V17s
p20
sS'statement'
p21
(lp22
V From up there in the sky Johnny can see the city as a square, sliced into smaller, identical squares by a regular grid of streets. Every square contains one of three kinds of terrain - buildings, grassland or water (perhaps most firemen would go into further detail when analysing terrain, but you really can't expect that from a firefighter whose preferred method of extinguishing fires is dynamite, can you?). Johnny starts out in the centre of the square corresponding to the fire station. In the time from the start of a minute to the end of that minute he can move to the center of one of the four adjacent squares (but he is not allowed to leave the city). While over the center of a square he can choose to drop a single dynamite charge on it. He starts preparing the charge at the beginning of a minute, and it is dropped from the helicopter at the end of the same minute. Everything on the square on which the bomb was dropped is blown apart, and in its place a crater is formed and instantly flooded by subterranean waters. The fire spreads in a most predictable way: if a square starts burning at the beginning of minute m, then all four adjacent squares will catch fire at the start of minute (m+2). The only exception is a square filled with water (either naturally, or by Johnny's bombs) which never catches fire. If a square starts burning, all property on it is instantly destroyed. Once a square starts burning it will only stop burning if Johnny blows it up, or when the monsoon rain comes and floods the city, at the end of the h-th minute of firefighting. m h Johnny's main objective is to save as many squares with buildings as possible (from fire and dynamite). An example of the fire fighting process is presented below.  
p23
asS'sourcelimit'
p24
V-
p25
sS'date'
p26
V2004-10-11
p27
sS'input'
p28
(lp29
VInput The first line of input contains a single integer t<=500, the number of test cases. t The first line of every test case contains five integers n c h sx sy, respectively denoting: n - the length of one side of the city (measured in squares), c - the number of dynamite charges Johnny can use, h - the number of minutes after which the rain falls, sx, sy - the x and y coordinates of the square containing the fire-station from which Johnny starts, measured relative to the North-West corner of the city (1<=sx, sy<=n<=50, 0<=c<=h<=5*n; there are about 10 test cases for all possible values of n). Finally, the map of the city is given in the form of n lines of n characters each, each corresponding to the state of a square at the start of the fire fighting ('b' - building, 'g' - grassland, 'w' - water, 'f' - fire). n c h sx sy x y n c h sx x sy y x y sx x sy y n c h n n n n 
p30
asS'constraints'
p31
g29
sS'id'
p32
c__builtin__
id
p33
sS'name'
p34
VBURNCITY
p35
sb.