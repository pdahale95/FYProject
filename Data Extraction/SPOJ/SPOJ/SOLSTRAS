(ispojProblem
SpojProblem
p0
(dp1
S'languages'
p2
VAll except: NODEJS PERL 6 VB.net
p3
sS'output'
p4
(lp5
V
p6
asS'description'
p7
V P n P   Legendre function sig n  N s  N s n sig n s s (n-1)/2 n mod n mod   Jacobi function jac n  N s  N s n jac(n,s)=\u000asig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P jac(n,s)=\u000asig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P jac(n,s)=\u000asig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P jac(n,s)=\u000asig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P jac(n,s)= jac n s sig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P sig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P sig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P sig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P   sig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P sig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P sig(n,s),   if  nP\u000ak\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P sig(n,s),   if  nP sig(n,s), sig n s   if  nP n  P k\u000ai=1\u000asig(pi,s),\u000a  if   n=\u000ak\u000ai=1\u000a pi, where all  pi P k\u000ai=1\u000asig(pi,s), k\u000ai=1\u000asig(pi,s), k\u000ai=1\u000asig(pi,s), k\u000ai=1\u000asig(pi,s), k\u000ai=1 k\u000ai=1 k\u000ai=1 k k k    i=1 i=1 i sig(pi,s), sig p i i s   if   n=\u000ak\u000ai=1\u000a pi, where all  pi P   if   n=\u000ak\u000ai=1\u000a pi, where all  pi P   if   n=\u000ak\u000ai=1\u000a pi, where all  pi P   if   n=\u000ak\u000ai=1\u000a pi, where all  pi P   if   n=   n k\u000ai=1 k\u000ai=1 k\u000ai=1 k k k    i=1 i=1 i  pi, where all  pi P  p i i p i i  P It is interesting to note that for given n and s, the values of sig(n,s) and jac(n,s) can be computed in O((log2 n)2) time. For particulars consult an encyclopedia, such as MathWorld. n s sig n s jac n s O 2 n 2 MathWorld  The deterministic version of the Solovay-Strassen primality-test algorithm is given below. algorithm Solovay-Strassen (n)\u000avar s;\u000abegin\u000a    for s in {1,2,3,4,...,n} do\u000a        if sig(n,s)jac(n,s)\u000a            then return "n is composite (detected at attempt <s>)";\u000a    return "n is prime";\u000aend. algorithm Solovay-Strassen (n)\u000avar s;\u000abegin\u000a    for s in {1,2,3,4,...,n} do\u000a        if sig(n,s)jac(n,s)\u000a            then return "n is composite (detected at attempt <s>)";\u000a    return "n is prime";\u000aend. algorithm Solovay-Strassen (n)\u000avar s;\u000abegin\u000a    for s in {1,2,3,4,...,n} do\u000a        if sig(n,s)jac(n,s)\u000a            then return "n is composite (detected at attempt <s>)";\u000a    return "n is prime";\u000aend. algorithm Solovay-Strassen (n) algorithm Solovay-Strassen (n) algorithm Solovay-Strassen n var s; var s; var s begin begin begin     for s in {1,2,3,4,...,n} do     for s in {1,2,3,4,...,n} do     for s in n do         if sig(n,s)jac(n,s)         if sig(n,s)jac(n,s)         if sig n s  jac n s             then return "n is composite (detected at attempt <s>)";             then return "n is composite (detected at attempt <s>)";             then return n is composite detected at attempt <     return "n is prime";     return "n is prime";     return n is prime n end. end. end Task We are not asking you to implement the Solovay-Strassen algorithm, this would be far too easy :). Instead, try to find values of n, for which the output of the algorithm would be "n is composite (detected at attempt 1)", "n is composite (detected at attempt 2)", and so on. Write out as many of these values as you can in consecutive lines, and try to keep them as small as possible. n n n Scoring The score awarded to your program is the total of all points given for its individual lines. The i-th line output by your program should contain exactly one positive odd integer n>2 of no more than 500 decimal digits. If Solovay-Strassen(n) yields the answer "n is composite (detected at attempt i)", you will receive i/log10 n points for this line, if not - your program will be considered incorrect. Output 0 if you don't want a line to be assessed. Only the first 1000 lines of output are taken into account. i n>2 n n i i 10 n Example A program outputing: 0\u000a0\u000a561 will receive 3/log10 561 = 1.091 points. 10
p8
sS'tags'
p9
S''
p10
sS'url'
p11
Vhttp://www.spoj.com/problems/SOLSTRAS
p12
sS'addedBy'
p13
VKonrad Piwakowski
p14
sS'memorylimit'
p15
V1536MB
p16
sS'cluster'
p17
VCube (Intel G860)
p18
sS'timelimit'
p19
V0.119s
p20
sS'statement'
p21
(lp22
g6
asS'sourcelimit'
p23
VThanks to Daniel Grzonkowski for valuable comments
p24
sS'date'
p25
V2004-07-10
p26
sS'input'
p27
(lp28
V 
p29
asS'constraints'
p30
g28
sS'id'
p31
c__builtin__
id
p32
sS'name'
p33
VSOLSTRAS
p34
sb.